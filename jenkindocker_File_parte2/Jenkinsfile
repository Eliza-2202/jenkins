pipeline {
    agent any

    stages {
        stage('Checkout SCM') {
            steps {
                checkout scm
            }
        }

        stage('Build Docker Image') {
            steps {
                dir('dockerKuberMini_File') {
                    sh 'docker build -t eliza22/suerte:tag -f Dockerfile .'
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                dir('dockerKuberMini_File') {
                    script {
                        // Configurar kubectl con los certificados correctos
                        sh '''
                        kubectl config set-cluster minikube --server=https://192.168.49.2:8443 --certificate-authority=/var/lib/jenkins/.minikube/certs/ca.pem
                        kubectl config set-credentials minikube --client-certificate=/var/lib/jenkins/.minikube/certs/client.crt --client-key=/var/lib/jenkins/.minikube/certs/client.key
                        kubectl config set-context minikube --cluster=minikube --user=minikube
                        kubectl config use-context minikube
                        '''
                        
                        // Aplicar el deployment
                        sh 'kubectl apply -f deployment.yml --validate=false'
                        
                        // Aplicar el servicio
                        sh 'kubectl apply -f service.yml --validate=false'
                    }
                }
            }
        }

        stage('Check Application') {
            steps {
                // Verificar los servicios
                sh 'kubectl get services'
            }
        }
    }

    post {
        always {
            dir('dockerKuberMini_File') {
                // Limpiar deployment y servicio después de la ejecución
                sh 'kubectl delete -f deployment.yml || true'
                sh 'kubectl delete -f service.yml || true'
            }
        }
    }
}

